#!/usr/bin/python
from __future__ import absolute_import
import subprocess
import json
import argparse
import version_handling
import os
import errno

parser = argparse.ArgumentParser("Version bumper tool")
group = parser.add_mutually_exclusive_group(required=True)
group.add_argument("--major", action="store_true",
                   help="Major version number bump")
group.add_argument("--minor", action="store_true",
                   help="Minor version number bump")
group.add_argument("--build", action="store_true",
                   help="Build number bump")

def bump_version(args):
    major, minor, build = version_handling.get_version()
    if args.major:
        major += 1
        minor = 0
        build = 0
    elif args.minor:
        minor += 1
        build = 0
    else:
        build += 1
    subprocess.check_call(["git", "tag",
                           "v%s.%s.%s" % (major, minor, build)])
    subprocess.check_call(["git", "push", "--tags"])
    try:
       os.remove("version.txt")
    except OSError as e:
       if e.errno != errno.ENOENT:
           raise

if __name__ == "__main__":
    bump_version(parser.parse_args())
